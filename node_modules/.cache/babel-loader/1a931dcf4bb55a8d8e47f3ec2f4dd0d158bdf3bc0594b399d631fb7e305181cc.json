{"ast":null,"code":"var _jsxFileName = \"E:\\\\programming\\\\react\\\\dnd\\\\my-final-space-characters-master\\\\src\\\\components\\\\elementBlock\\\\elementBlock.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, Component } from \"react\";\nimport \"./elementBlock.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ElementBlock() {\n  _s();\n  const [zIndex, setZ] = useState(0);\n  const [float, setFloat] = useState('center'); //Этот параметр отвечает за позиционирование элементов внутри: по середине, слева, справа\n  const [coords, setCoords] = useState({\n    x: 0,\n    y: 0\n  });\n\n  // function componentDidMount() {\n  // document.addEventListener('m', (event) => {\n  //     console.log({x: event.clientX, y: event.clientY})\n  //     // setCoords({x: event.clientX, y: event.clientY})\n  // });\n  // } \n  // TODO: реализовать перетягивание элемента. \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"element-block \",\n    onMouseUp: () => {\n      console.log(\"больше не зажат\");\n    },\n    style: {\n      left: coords.left,\n      top: coords.top\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drag-point left-up-point\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drag-point right-up-point\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drag-point left-buttom-point\",\n      style: {\n        left: \"0\",\n        bottom: \"0\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drag-point right-buttom-point\",\n      style: {\n        right: \"0\",\n        bottom: \"0\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), \"(\", coords.x, \", \", coords.y, \")\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_s(ElementBlock, \"U0htbySuP23Jy0oWYf007IIQG9g=\");\n_c = ElementBlock;\nvar _c;\n$RefreshReg$(_c, \"ElementBlock\");","map":{"version":3,"names":["useEffect","useState","Component","jsxDEV","_jsxDEV","ElementBlock","_s","zIndex","setZ","float","setFloat","coords","setCoords","x","y","className","onMouseUp","console","log","style","left","top","children","fileName","_jsxFileName","lineNumber","columnNumber","bottom","right","_c","$RefreshReg$"],"sources":["E:/programming/react/dnd/my-final-space-characters-master/src/components/elementBlock/elementBlock.jsx"],"sourcesContent":["import { useEffect, useState, Component } from \"react\"\r\nimport \"./elementBlock.css\"\r\n\r\nexport default function ElementBlock() {\r\n    const [zIndex, setZ] = useState(0); \r\n    const [float, setFloat] = useState('center')//Этот параметр отвечает за позиционирование элементов внутри: по середине, слева, справа\r\n    const [coords, setCoords] = useState({x: 0, y: 0});\r\n    \r\n\r\n\r\n\r\n    // function componentDidMount() {\r\n        // document.addEventListener('m', (event) => {\r\n        //     console.log({x: event.clientX, y: event.clientY})\r\n        //     // setCoords({x: event.clientX, y: event.clientY})\r\n        // });\r\n    // } \r\n// TODO: реализовать перетягивание элемента. \r\n\r\n    return (\r\n        <div className=\"element-block \"   onMouseUp={() => {console.log(\"больше не зажат\")}} style={{left:coords.left , top: coords.top}}>\r\n            <div className=\"drag-point left-up-point\" ></div>\r\n            <div className=\"drag-point right-up-point\" ></div>\r\n            <div className=\"drag-point left-buttom-point\" style={{left: \"0\", bottom: \"0\"}}></div>\r\n            <div className=\"drag-point right-buttom-point\" style={{right: \"0\", bottom: \"0\"}}></div>\r\n            ({coords.x}, {coords.y})\r\n            {/* Вот я не знаю, как рендерить дочерние элементы. Они ведь могут быть разных типов, писать кучу условий? А может солид и ХЕшМАп? */}\r\n\r\n        </div>\r\n\r\n    )\r\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACtD,OAAO,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,MAAM,EAAEC,IAAI,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAClC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,QAAQ,CAAC;EAC5C,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC;IAACY,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAC,CAAC,CAAC;;EAKlD;EACI;EACA;EACA;EACA;EACJ;EACJ;;EAEI,oBACIV,OAAA;IAAKW,SAAS,EAAC,gBAAgB;IAAGC,SAAS,EAAEA,CAAA,KAAM;MAACC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAAA,CAAE;IAACC,KAAK,EAAE;MAACC,IAAI,EAACT,MAAM,CAACS,IAAI;MAAGC,GAAG,EAAEV,MAAM,CAACU;IAAG,CAAE;IAAAC,QAAA,gBAC7HlB,OAAA;MAAKW,SAAS,EAAC;IAA0B;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACjDtB,OAAA;MAAKW,SAAS,EAAC;IAA2B;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAClDtB,OAAA;MAAKW,SAAS,EAAC,8BAA8B;MAACI,KAAK,EAAE;QAACC,IAAI,EAAE,GAAG;QAAEO,MAAM,EAAE;MAAG;IAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACrFtB,OAAA;MAAKW,SAAS,EAAC,+BAA+B;MAACI,KAAK,EAAE;QAACS,KAAK,EAAE,GAAG;QAAED,MAAM,EAAE;MAAG;IAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,KACtF,EAACf,MAAM,CAACE,CAAC,EAAC,IAAE,EAACF,MAAM,CAACG,CAAC,EAAC,GACvB;EAAA;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAGd;AAACpB,EAAA,CA5BuBD,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}