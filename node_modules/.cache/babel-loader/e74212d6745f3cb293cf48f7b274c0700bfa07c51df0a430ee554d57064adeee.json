{"ast":null,"code":"var _jsxFileName = \"E:\\\\programming\\\\react\\\\fast-mark\\\\src\\\\components\\\\workspace\\\\workspace.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from 'react';\nimport ElementsList from '../elementList/elementsList';\nimport ElementBlock from '../elementBlock/elementBlock';\nimport ButtonCreateElement from '../buttonCreateElement/buttonCreateElement';\nimport './workspace.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet initialElements = [{\n  id: '1',\n  content: 'Element 1',\n  left: 0,\n  top: 0,\n  zIndex: 1,\n  width: \"100px\",\n  height: \"100px\"\n}];\nconst dragClickType = \"drag\";\nconst resizeClickType = \"resize\";\nexport default function Workspace() {\n  _s();\n  const [elements, updateElements] = useState(initialElements);\n\n  //  может быть попытаться возврашать айди элемента и позицию клика, а потом менять позицию нажатого предмета. \n\n  let elementCoord = {\n    startX: 0,\n    startY: 0,\n    lastX: 0,\n    lastY: 0\n  };\n  let elementSize = {\n    width: 0,\n    height: 0\n  };\n  let selectedElement = null;\n  let isClicked = false;\n  let isActivatedListners = false;\n  let clickType = null;\n  function activateListners() {\n    if (isActivatedListners === false) {\n      window.addEventListener(\"mouseup\", event => {\n        onMouseUp(event);\n      });\n      window.addEventListener('mousemove', event => {\n        onMouseMove(event);\n      });\n      isActivatedListners = true;\n    }\n  }\n  const onMouseUp = event => {\n    isClicked = false;\n    elementCoord.lastX = event.target.offsetLeft;\n    elementCoord.lastY = event.target.offsetTop;\n    console.log(elementCoord);\n\n    // window.removeEventListener('mousemove', onMouseMove)\n  };\n  function onMouseDown(id, event) {\n    isClicked = true;\n    clickType = dragClickType;\n    selectedElement = id;\n    // TODO можно сделать двойное нажатие а может быть нажатие правой кнопкой мыши\n    // elementCoord.lastX = event.target.offsetLeft;\n    // elementCoord.lastY = event.target.offsetTop;\n\n    elementCoord.startX = event.clientX;\n    elementCoord.startY = event.clientY;\n    elementSize.width = event.target.style.width;\n    activateListners();\n    // TODO сделать выдвигающуюся панельку по клику.\n  }\n  const onMouseMove = event => {\n    if (!isClicked) return;\n\n    // console.log(clickType)\n    if (clickType === dragClickType) {\n      const nextX = event.clientX - elementCoord.startX + elementCoord.lastX;\n      const nextY = event.clientY - elementCoord.startY + elementCoord.lastY;\n      const newElements = elements.map(obj => {\n        if (obj.id === selectedElement) {\n          return {\n            ...obj,\n            left: nextX,\n            top: nextY\n          };\n        }\n        return obj;\n      });\n      updateElements(newElements);\n    } else if (clickType === resizeClickType) {\n      const newElements = elements.map(obj => {\n        if (obj.id === selectedElement) {\n          console.log(elementSize);\n          return {\n            ...obj,\n            width: elementSize.width\n          };\n        }\n        return obj;\n      });\n      updateElements(newElements);\n    }\n  };\n\n  //    Может быть перенести в ElementBlock???\n  function onResizeclick(event, id) {\n    isClicked = true;\n    clickType = resizeClickType;\n    selectedElement = id;\n\n    // нам не нужно заново считывать LastX/lastY, они уже считаны\n\n    elementCoord.startX = event.clientX;\n    elementCoord.startY = event.clientY;\n    elementSize.width = elementSize.width + elementCoord.lastX - elementCoord.startX;\n    activateListners();\n  }\n  function onResizeClickUp(event) {\n    elementCoord.lastX = event.clientX;\n    elementCoord.lastY = event.clientY;\n  }\n\n  // const worspace = document.getElementById('workspace')\n  // сделать стэйт с выбранным элементом и менять его в блоке\n\n  const onUpdateElements = elements => {\n    // let newElements = elements;\n    // elements.join(element)\n    updateElements(elements);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"workspace\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: 'aqua',\n        width: '200px',\n        position: 'absolute',\n        right: '0'\n      },\n      children: /*#__PURE__*/_jsxDEV(ElementsList, {\n        elements: elements,\n        updateElements: onUpdateElements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"redactor\",\n      children: elements.map((element, index) => {\n        let styles = {\n          left: element.left,\n          top: element.top,\n          zIndex: index,\n          width: element.width,\n          height: element.height\n        };\n        return /*#__PURE__*/_jsxDEV(ElementBlock, {\n          childElement: element,\n          identificator: element.id,\n          onSelect: onMouseDown,\n          onResizeClickUp: onResizeClickUp,\n          onResizeClick: onResizeclick,\n          blockStyle: styles,\n          children: element.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"toolbar\",\n      children: /*#__PURE__*/_jsxDEV(ButtonCreateElement, {\n        elements: elements,\n        updateElements: updateElements,\n        elementContent: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Yes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 108\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n}\n_s(Workspace, \"MMRQDCfvaa4EIqRSwBtgiCnTQ1g=\");\n_c = Workspace;\nvar _c;\n$RefreshReg$(_c, \"Workspace\");","map":{"version":3,"names":["useState","useRef","useEffect","ElementsList","ElementBlock","ButtonCreateElement","jsxDEV","_jsxDEV","initialElements","id","content","left","top","zIndex","width","height","dragClickType","resizeClickType","Workspace","_s","elements","updateElements","elementCoord","startX","startY","lastX","lastY","elementSize","selectedElement","isClicked","isActivatedListners","clickType","activateListners","window","addEventListener","event","onMouseUp","onMouseMove","target","offsetLeft","offsetTop","console","log","onMouseDown","clientX","clientY","style","nextX","nextY","newElements","map","obj","onResizeclick","onResizeClickUp","onUpdateElements","children","background","position","right","fileName","_jsxFileName","lineNumber","columnNumber","element","index","styles","childElement","identificator","onSelect","onResizeClick","blockStyle","elementContent","_c","$RefreshReg$"],"sources":["E:/programming/react/fast-mark/src/components/workspace/workspace.jsx"],"sourcesContent":["import { useState, useRef, useEffect } from 'react';\r\nimport ElementsList from '../elementList/elementsList';\r\nimport ElementBlock from '../elementBlock/elementBlock';\r\nimport ButtonCreateElement from '../buttonCreateElement/buttonCreateElement';\r\nimport './workspace.css'\r\n\r\nlet initialElements = [\r\n    { id: '1', content: 'Element 1', left: 0, top: 0, zIndex: 1, width: \"100px\", height: \"100px\"},\r\n];\r\nconst dragClickType = \"drag\"\r\nconst resizeClickType = \"resize\"\r\n\r\nexport default function Workspace() {\r\n    const [elements, updateElements] = useState(initialElements);\r\n    \r\n    //  может быть попытаться возврашать айди элемента и позицию клика, а потом менять позицию нажатого предмета. \r\n    \r\n    let elementCoord = {startX: 0, startY: 0, lastX: 0, lastY: 0,}\r\n    let elementSize = {width: 0, height: 0,}\r\n    let selectedElement = null;\r\n    let isClicked = false\r\n    let isActivatedListners = false\r\n    let clickType = null\r\n\r\n    function activateListners() {\r\n        if (isActivatedListners === false) {\r\n            window.addEventListener(\"mouseup\", (event) => {onMouseUp(event)});\r\n            window.addEventListener('mousemove', (event) => {onMouseMove(event)})\r\n            isActivatedListners = true\r\n        }\r\n    }\r\n\r\n    const onMouseUp = (event) => {\r\n        isClicked = false;\r\n\r\n        elementCoord.lastX = event.target.offsetLeft;\r\n        elementCoord.lastY = event.target.offsetTop;\r\n        \r\n        console.log(elementCoord)\r\n\r\n        // window.removeEventListener('mousemove', onMouseMove)\r\n    }    \r\n    \r\n    function onMouseDown(id, event) {\r\n        isClicked = true\r\n        clickType = dragClickType\r\n\r\n        selectedElement = id\r\n        // TODO можно сделать двойное нажатие а может быть нажатие правой кнопкой мыши\r\n        // elementCoord.lastX = event.target.offsetLeft;\r\n        // elementCoord.lastY = event.target.offsetTop;\r\n        \r\n        elementCoord.startX = event.clientX\r\n        elementCoord.startY = event.clientY\r\n        \r\n        elementSize.width = event.target.style.width;\r\n        activateListners()\r\n        // TODO сделать выдвигающуюся панельку по клику.\r\n    }\r\n    \r\n    const onMouseMove = (event) => {\r\n        if (!isClicked) return;\r\n        \r\n        // console.log(clickType)\r\n        if (clickType === dragClickType) {\r\n\r\n            const nextX = event.clientX - elementCoord.startX + elementCoord.lastX;\r\n            const nextY = event.clientY - elementCoord.startY + elementCoord.lastY;  \r\n\r\n            const newElements = elements.map((obj) => {\r\n                \r\n                if (obj.id === selectedElement) {\r\n                    return {...obj, left: nextX, top: nextY};\r\n                }     \r\n                return obj;\r\n            })    \r\n            updateElements(newElements)\r\n\r\n        } else if (clickType === resizeClickType) {\r\n            const newElements = elements.map((obj) => {\r\n                if (obj.id === selectedElement) {\r\n                    console.log(elementSize)\r\n                    return {...obj, width: elementSize.width};\r\n                }     \r\n                return obj;\r\n            })    \r\n            updateElements(newElements)\r\n\r\n        }\r\n\r\n    }     \r\n\r\n//    Может быть перенести в ElementBlock???\r\n    function onResizeclick(event, id) {\r\n        isClicked = true;\r\n        clickType = resizeClickType;\r\n        selectedElement = id;\r\n        \r\n        \r\n        // нам не нужно заново считывать LastX/lastY, они уже считаны\r\n        \r\n        elementCoord.startX = event.clientX;\r\n        elementCoord.startY = event.clientY;\r\n        \r\n        elementSize.width = elementSize.width + elementCoord.lastX - elementCoord.startX  \r\n        activateListners()\r\n    }\r\n    \r\n    \r\n    function onResizeClickUp(event) {\r\n        elementCoord.lastX = event.clientX\r\n        elementCoord.lastY = event.clientY\r\n    }\r\n\r\n\r\n\r\n    // const worspace = document.getElementById('workspace')\r\n    // сделать стэйт с выбранным элементом и менять его в блоке\r\n\r\n    const onUpdateElements =(elements)=>{\r\n        // let newElements = elements;\r\n        // elements.join(element)\r\n        updateElements(elements)\r\n    }    \r\n\r\n\r\n    return (\r\n        <div id='workspace' >\r\n            <div style={{background:'aqua', width:'200px', position:'absolute', right:'0'}}>\r\n                <ElementsList elements = {elements} updateElements={onUpdateElements} />\r\n            </div>\r\n            {/* Здесь у нас рендерятся все */}\r\n            <div id ='redactor'>                \r\n                {elements.map((element, index) => {\r\n                    let styles = {left : element.left, top: element.top, zIndex: index, width: element.width, height: element.height }\r\n                    return (\r\n                        <ElementBlock childElement={element} identificator={element.id} onSelect={onMouseDown} onResizeClickUp={onResizeClickUp} onResizeClick={onResizeclick} blockStyle={styles}>{element.content}</ElementBlock>\r\n                    )\r\n                })}    \r\n            </div>\r\n\r\n            <div id = \"toolbar\">\r\n                <ButtonCreateElement elements={elements} updateElements={updateElements} elementContent = {<h1>Yes</h1>}></ButtonCreateElement>\r\n\r\n            </div>\r\n            \r\n\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}