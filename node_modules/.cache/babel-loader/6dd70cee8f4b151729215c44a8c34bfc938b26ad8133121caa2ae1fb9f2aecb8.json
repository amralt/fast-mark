{"ast":null,"code":"var _jsxFileName = \"E:\\\\programming\\\\react\\\\dnd\\\\my-final-space-characters-master\\\\src\\\\components\\\\elementBlock\\\\elementBlock.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./elementBlock.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ElementBlock() {\n  _s();\n  const [zIndex, setZ] = useState(0);\n  const [float, setFloat] = useState('center'); //Этот параметр отвечает за позиционирование элементов внутри: по середине, слева, справа\n\n  const container = document.getElementById;\n  function onMouseDrag({\n    movementX,\n    movementY\n  }) {\n    let getContainerStyle = window.getComputedStyle(container);\n    let leftValue = parseInt(getContainerStyle.left);\n    let topValue = parseInt(getContainerStyle.top);\n    container.style.left = `${leftValue + movementX}px`;\n    container.style.top = `${topValue + movementY}px`;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"element-block \",\n    onMouseDrag: onMouseDrag,\n    style: {},\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drag-point left-up-point\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drag-point right-up-point\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drag-point left-buttom-point\",\n      style: {\n        left: \"0\",\n        bottom: \"0\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drag-point right-buttom-point\",\n      style: {\n        right: \"0\",\n        bottom: \"0\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n_s(ElementBlock, \"3q4A2M4UKBqVJtBs2O5TwokW8CQ=\");\n_c = ElementBlock;\nvar _c;\n$RefreshReg$(_c, \"ElementBlock\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","ElementBlock","_s","zIndex","setZ","float","setFloat","container","document","getElementById","onMouseDrag","movementX","movementY","getContainerStyle","window","getComputedStyle","leftValue","parseInt","left","topValue","top","style","className","children","fileName","_jsxFileName","lineNumber","columnNumber","bottom","right","_c","$RefreshReg$"],"sources":["E:/programming/react/dnd/my-final-space-characters-master/src/components/elementBlock/elementBlock.jsx"],"sourcesContent":["import { useState } from \"react\"\r\nimport \"./elementBlock.css\"\r\n\r\nexport default function ElementBlock() {\r\n    const [zIndex, setZ] = useState(0); \r\n    const [float, setFloat] = useState('center')//Этот параметр отвечает за позиционирование элементов внутри: по середине, слева, справа\r\n\r\n    const container = document.getElementById\r\n    function onMouseDrag({ movementX, movementY }) {\r\n        let getContainerStyle = window.getComputedStyle(container);\r\n        let leftValue = parseInt(getContainerStyle.left);\r\n        let topValue = parseInt(getContainerStyle.top);\r\n        container.style.left = `${leftValue + movementX}px`;\r\n        container.style.top = `${topValue + movementY}px`;\r\n    }\r\n\r\n    return (\r\n        <div className=\"element-block \" onMouseDrag={onMouseDrag} style={{}}>\r\n            <div className=\"drag-point left-up-point\" ></div>\r\n            <div className=\"drag-point right-up-point\" ></div>\r\n            <div className=\"drag-point left-buttom-point\" style={{left: \"0\", bottom: \"0\"}}></div>\r\n            <div className=\"drag-point right-buttom-point\" style={{right: \"0\", bottom: \"0\"}}></div>\r\n\r\n            {/* Вот я не знаю, как рендерить дочерние элементы. Они ведь могут быть разных типов, писать кучу условий? А может солид и ХЕшМАп? */}\r\n\r\n        </div>\r\n\r\n    )\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,MAAM,EAAEC,IAAI,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EAClC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,QAAQ,CAAC;;EAE5C,MAAMS,SAAS,GAAGC,QAAQ,CAACC,cAAc;EACzC,SAASC,WAAWA,CAAC;IAAEC,SAAS;IAAEC;EAAU,CAAC,EAAE;IAC3C,IAAIC,iBAAiB,GAAGC,MAAM,CAACC,gBAAgB,CAACR,SAAS,CAAC;IAC1D,IAAIS,SAAS,GAAGC,QAAQ,CAACJ,iBAAiB,CAACK,IAAI,CAAC;IAChD,IAAIC,QAAQ,GAAGF,QAAQ,CAACJ,iBAAiB,CAACO,GAAG,CAAC;IAC9Cb,SAAS,CAACc,KAAK,CAACH,IAAI,GAAI,GAAEF,SAAS,GAAGL,SAAU,IAAG;IACnDJ,SAAS,CAACc,KAAK,CAACD,GAAG,GAAI,GAAED,QAAQ,GAAGP,SAAU,IAAG;EACrD;EAEA,oBACIZ,OAAA;IAAKsB,SAAS,EAAC,gBAAgB;IAACZ,WAAW,EAAEA,WAAY;IAACW,KAAK,EAAE,CAAC,CAAE;IAAAE,QAAA,gBAChEvB,OAAA;MAAKsB,SAAS,EAAC;IAA0B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACjD3B,OAAA;MAAKsB,SAAS,EAAC;IAA2B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAClD3B,OAAA;MAAKsB,SAAS,EAAC,8BAA8B;MAACD,KAAK,EAAE;QAACH,IAAI,EAAE,GAAG;QAAEU,MAAM,EAAE;MAAG;IAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACrF3B,OAAA;MAAKsB,SAAS,EAAC,+BAA+B;MAACD,KAAK,EAAE;QAACQ,KAAK,EAAE,GAAG;QAAED,MAAM,EAAE;MAAG;IAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAItF,CAAC;AAGd;AAACzB,EAAA,CAzBuBD,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}