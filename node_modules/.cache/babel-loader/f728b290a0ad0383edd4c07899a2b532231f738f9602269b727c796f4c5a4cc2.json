{"ast":null,"code":"var _jsxFileName = \"E:\\\\programming\\\\react\\\\dnd\\\\my-final-space-characters-master\\\\src\\\\components\\\\elementBlock\\\\elementBlock.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./elementBlock.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ElementBlock() {\n  _s();\n  const [zIndex, setZ] = useState(0);\n  const [float, setFloat] = useState('center'); //Этот параметр отвечает за позиционирование элементов внутри: по середине, слева, справа\n  const [coords, setCoords] = useState({\n    x: 0,\n    y: 0\n  });\n  const [oldCoords, setOldCoords] = use({\n    x: 0,\n    y: 0\n  });\n\n  // function handleOldCoords(event) {\n  //     setOldCoords({x: window})\n  // }\n\n  // function componentDidMount() {\n  // document.addEventListener('mousedown', (event) => {\n  //     setOldCoords({x: event.clientX, y: event.clientY})\n  //     console.log(oldCoords)\n  // });\n  // } \n  // TODO: реализовать перетягивание элемента. \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"element-block \",\n    onMouseUp: () => {\n      console.log(\"больше не зажат\");\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drag-point left-up-point\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drag-point right-up-point\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drag-point left-buttom-point\",\n      style: {\n        left: \"0\",\n        bottom: \"0\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drag-point right-buttom-point\",\n      style: {\n        right: \"0\",\n        bottom: \"0\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(ElementBlock, \"U0htbySuP23Jy0oWYf007IIQG9g=\");\n_c = ElementBlock;\nvar _c;\n$RefreshReg$(_c, \"ElementBlock\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","ElementBlock","_s","zIndex","setZ","float","setFloat","coords","setCoords","x","y","oldCoords","setOldCoords","use","className","onMouseUp","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","style","left","bottom","right","_c","$RefreshReg$"],"sources":["E:/programming/react/dnd/my-final-space-characters-master/src/components/elementBlock/elementBlock.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport \"./elementBlock.css\"\r\n\r\nexport default function ElementBlock() {\r\n    const [zIndex, setZ] = useState(0); \r\n    const [float, setFloat] = useState('center')//Этот параметр отвечает за позиционирование элементов внутри: по середине, слева, справа\r\n    const [coords, setCoords] = useState({x: 0, y: 0});\r\n    const [oldCoords, setOldCoords] = use({x: 0, y: 0});\r\n\r\n    // function handleOldCoords(event) {\r\n    //     setOldCoords({x: window})\r\n    // }\r\n\r\n    // function componentDidMount() {\r\n    // document.addEventListener('mousedown', (event) => {\r\n    //     setOldCoords({x: event.clientX, y: event.clientY})\r\n    //     console.log(oldCoords)\r\n    // });\r\n    // } \r\n// TODO: реализовать перетягивание элемента. \r\n\r\n    return (\r\n        <div className=\"element-block \"   onMouseUp={() => {console.log(\"больше не зажат\")}}>\r\n            <div className=\"drag-point left-up-point\" ></div>\r\n            <div className=\"drag-point right-up-point\" ></div>\r\n            <div className=\"drag-point left-buttom-point\" style={{left: \"0\", bottom: \"0\"}}></div>\r\n            <div className=\"drag-point right-buttom-point\" style={{right: \"0\", bottom: \"0\"}}></div>\r\n            {/* ({coords.x}, {coords.y}) */}\r\n            {/* Вот я не знаю, как рендерить дочерние элементы. Они ведь могут быть разных типов, писать кучу условий? А может солид и ХЕшМАп? */}\r\n\r\n        </div>\r\n\r\n    )\r\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,MAAM,EAAEC,IAAI,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EAClC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,QAAQ,CAAC;EAC5C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC;IAACW,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAC,CAAC,CAAC;EAClD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGC,GAAG,CAAC;IAACJ,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAC,CAAC,CAAC;;EAEnD;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACJ;;EAEI,oBACIV,OAAA;IAAKc,SAAS,EAAC,gBAAgB;IAAGC,SAAS,EAAEA,CAAA,KAAM;MAACC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAAA,CAAE;IAAAC,QAAA,gBAChFlB,OAAA;MAAKc,SAAS,EAAC;IAA0B;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACjDtB,OAAA;MAAKc,SAAS,EAAC;IAA2B;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAClDtB,OAAA;MAAKc,SAAS,EAAC,8BAA8B;MAACS,KAAK,EAAE;QAACC,IAAI,EAAE,GAAG;QAAEC,MAAM,EAAE;MAAG;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACrFtB,OAAA;MAAKc,SAAS,EAAC,+BAA+B;MAACS,KAAK,EAAE;QAACG,KAAK,EAAE,GAAG;QAAED,MAAM,EAAE;MAAG;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAItF,CAAC;AAGd;AAACpB,EAAA,CA9BuBD,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}