{"ast":null,"code":"var _jsxFileName = \"E:\\\\programming\\\\react\\\\dnd\\\\my-final-space-characters-master\\\\src\\\\App.js\";\n// import React, { useState } from 'react';\n// import { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n// import './App.css';\n// import ElementsList from './components/elementsList';\n\n// const elementsData = [\n//   { id: 'item1', content: 'Элемент 1' },\n//   { id: 'item2', content: 'Элемент 2' },\n//   { id: 'item3', content: 'Элемент 3' },\n//   { id: 'item4', content: 'Элемент 4' },\n//   { id: 'item5', content: 'Элемент 5' },\n// ]\n\n// function App() {\n//   const [characters, updateCharacters] = useState(elementsData);\n\n//   function handleOnDragEnd(result) {\n//     if (!result.destination) return;\n\n//     const items = Array.from(characters);\n//     const [reorderedItem] = items.splice(result.source.index, 1);\n//     items.splice(result.destination.index, 0, reorderedItem);\n\n//     updateCharacters(items);\n//   }\n\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         {/* <DragDropContext onDragEnd={handleOnDragEnd}>\n//           <Droppable droppableId=\"characters\">\n//             {(provided) => (\n//               <ul className=\"characters\" {...provided.droppableProps} ref={provided.innerRef}>\n//                 {characters.map(({id, content}, index) => {\n//                   return (\n//                     <Draggable key={id} draggableId={id} index={index}>\n//                       {(provided) => (\n//                         <li ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n//                           <p>\n//                             { content }\n//                           </p>\n//                         </li>\n//                       )}\n//                     </Draggable>\n//                   );\n//                 })}\n//                 {provided.placeholder}\n//               </ul>\n//             )}\n//           </Droppable>\n//         </DragDropContext> */}\n\n//         <ElementsList/>\n//       </header>\n//       <p>\n//         Images from <a href=\"https://final-space.fandom.com/wiki/Final_Space_Wiki\">Final Space Wiki</a>\n//       </p>\n//     </div>\n//   );\n// }\n\n// export default App;\nimport React from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialElements = [{\n  id: '1',\n  content: 'Element 1'\n}, {\n  id: '2',\n  content: 'Element 2'\n}, {\n  id: '3',\n  content: 'Element 3'\n}];\n\n// const ElementsList = () => {\n//   const [elements, setElements] = React.useState(initialElements);\n\n//   const onDragEnd = (result) => {\n//     if (!result.destination) {\n//       return;\n//     }\n\n//     const items = Array.from(elements);\n//     const [reorderedItem] = items.splice(result.source.index, 1);\n//     items.splice(result.destination.index, 0, reorderedItem);\n\n//     setElements(items);\n//   };\n\n//   return (\n//     <DragDropContext onDragEnd={onDragEnd}>\n//       <Droppable droppableId=\"elements\">\n//         {(provided) => (\n//           <ul {...provided.droppableProps} ref={provided.innerRef}>\n//             {elements.map((element, index) => (\n//               <Draggable key={element.id} draggableId={element.id} index={index}>\n//                 {(provided) => (\n//                   <li\n//                     ref={provided.innerRef}\n//                     {...provided.draggableProps}\n//                     {...provided.dragHandleProps}\n//                   >\n//                     {element.content}\n//                   </li>\n//                 )}\n//               </Draggable>\n//             ))}\n//             {provided.placeholder}\n//           </ul>\n//         )}\n//       </Droppable>\n//     </DragDropContext>\n//   );\n// };\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Draggable Elements List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ElementsList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","initialElements","id","content","App","children","fileName","_jsxFileName","lineNumber","columnNumber","ElementsList","_c","$RefreshReg$"],"sources":["E:/programming/react/dnd/my-final-space-characters-master/src/App.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n// import './App.css';\n// import ElementsList from './components/elementsList';\n\n// const elementsData = [\n//   { id: 'item1', content: 'Элемент 1' },\n//   { id: 'item2', content: 'Элемент 2' },\n//   { id: 'item3', content: 'Элемент 3' },\n//   { id: 'item4', content: 'Элемент 4' },\n//   { id: 'item5', content: 'Элемент 5' },\n// ]\n\n// function App() {\n//   const [characters, updateCharacters] = useState(elementsData);\n\n//   function handleOnDragEnd(result) {\n//     if (!result.destination) return;\n\n//     const items = Array.from(characters);\n//     const [reorderedItem] = items.splice(result.source.index, 1);\n//     items.splice(result.destination.index, 0, reorderedItem);\n\n//     updateCharacters(items);\n//   }\n\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         {/* <DragDropContext onDragEnd={handleOnDragEnd}>\n//           <Droppable droppableId=\"characters\">\n//             {(provided) => (\n//               <ul className=\"characters\" {...provided.droppableProps} ref={provided.innerRef}>\n//                 {characters.map(({id, content}, index) => {\n//                   return (\n//                     <Draggable key={id} draggableId={id} index={index}>\n//                       {(provided) => (\n//                         <li ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n//                           <p>\n//                             { content }\n//                           </p>\n//                         </li>\n//                       )}\n//                     </Draggable>\n//                   );\n//                 })}\n//                 {provided.placeholder}\n//               </ul>\n//             )}\n//           </Droppable>\n//         </DragDropContext> */}\n        \n//         <ElementsList/>\n//       </header>\n//       <p>\n//         Images from <a href=\"https://final-space.fandom.com/wiki/Final_Space_Wiki\">Final Space Wiki</a>\n//       </p>\n//     </div>\n//   );\n// }\n\n// export default App;\nimport React from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst initialElements = [\n  { id: '1', content: 'Element 1' },\n  { id: '2', content: 'Element 2' },\n  { id: '3', content: 'Element 3' },\n];\n\n// const ElementsList = () => {\n//   const [elements, setElements] = React.useState(initialElements);\n\n//   const onDragEnd = (result) => {\n//     if (!result.destination) {\n//       return;\n//     }\n\n//     const items = Array.from(elements);\n//     const [reorderedItem] = items.splice(result.source.index, 1);\n//     items.splice(result.destination.index, 0, reorderedItem);\n\n//     setElements(items);\n//   };\n\n//   return (\n//     <DragDropContext onDragEnd={onDragEnd}>\n//       <Droppable droppableId=\"elements\">\n//         {(provided) => (\n//           <ul {...provided.droppableProps} ref={provided.innerRef}>\n//             {elements.map((element, index) => (\n//               <Draggable key={element.id} draggableId={element.id} index={index}>\n//                 {(provided) => (\n//                   <li\n//                     ref={provided.innerRef}\n//                     {...provided.draggableProps}\n//                     {...provided.dragHandleProps}\n//                   >\n//                     {element.content}\n//                   </li>\n//                 )}\n//               </Draggable>\n//             ))}\n//             {provided.placeholder}\n//           </ul>\n//         )}\n//       </Droppable>\n//     </DragDropContext>\n//   );\n// };\n\nconst App = () => {\n  return (\n    <div>\n      <h1>Draggable Elements List</h1>\n      <ElementsList />\n    </div>\n  );\n};\n\nexport default App;\n\n"],"mappings":";AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,EAAEC,SAAS,EAAEC,SAAS,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5E,MAAMC,eAAe,GAAG,CACtB;EAAEC,EAAE,EAAE,GAAG;EAAEC,OAAO,EAAE;AAAY,CAAC,EACjC;EAAED,EAAE,EAAE,GAAG;EAAEC,OAAO,EAAE;AAAY,CAAC,EACjC;EAAED,EAAE,EAAE,GAAG;EAAEC,OAAO,EAAE;AAAY,CAAC,CAClC;;AAED;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAChB,oBACEJ,OAAA;IAAAK,QAAA,gBACEL,OAAA;MAAAK,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCT,OAAA,CAACU,YAAY;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEV,CAAC;AAACE,EAAA,GAPIP,GAAG;AAST,eAAeA,GAAG;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}