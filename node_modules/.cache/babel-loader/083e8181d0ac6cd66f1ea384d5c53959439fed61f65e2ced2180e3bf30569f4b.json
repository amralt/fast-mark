{"ast":null,"code":"var _jsxFileName = \"E:\\\\programming\\\\react\\\\dnd\\\\my-final-space-characters-master\\\\src\\\\components\\\\elementBlock\\\\elementBlock.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./elementBlock.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ElementBlock() {\n  _s();\n  const [zIndex, setZ] = useState(0);\n  const [float, setFloat] = useState('center'); //Этот параметр отвечает за позиционирование элементов внутри: по середине, слева, справа\n\n  const left = 0;\n  const top = 0;\n\n  // const container = document.getElementById\n  // function onMouseDrag({ movementX, movementY }) {\n  //     let getContainerStyle = window.getComputedStyle(container);\n  //     let leftValue = parseInt(getContainerStyle.left);\n  //     let topValue = parseInt(getContainerStyle.top);\n  //     container.style.left = `${leftValue + movementX}px`;\n  //     container.style.top = `${topValue + movementY}px`;\n  // }\n  // TODO: реализовать перетягивание элемента. \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"element-block \",\n    onMouseDown: () => {\n      console.log(\"dadada\");\n    },\n    onMouseUp: () => {\n      console.log(\"nononon\");\n    },\n    style: {\n      left: {\n        left\n      },\n      top: {\n        top\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drag-point left-up-point\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drag-point right-up-point\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drag-point left-buttom-point\",\n      style: {\n        left: \"0\",\n        bottom: \"0\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drag-point right-buttom-point\",\n      style: {\n        right: \"0\",\n        bottom: \"0\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(ElementBlock, \"3q4A2M4UKBqVJtBs2O5TwokW8CQ=\");\n_c = ElementBlock;\nvar _c;\n$RefreshReg$(_c, \"ElementBlock\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","ElementBlock","_s","zIndex","setZ","float","setFloat","left","top","className","onMouseDown","console","log","onMouseUp","style","children","fileName","_jsxFileName","lineNumber","columnNumber","bottom","right","_c","$RefreshReg$"],"sources":["E:/programming/react/dnd/my-final-space-characters-master/src/components/elementBlock/elementBlock.jsx"],"sourcesContent":["import { useState } from \"react\"\r\nimport \"./elementBlock.css\"\r\n\r\nexport default function ElementBlock() {\r\n    const [zIndex, setZ] = useState(0); \r\n    const [float, setFloat] = useState('center')//Этот параметр отвечает за позиционирование элементов внутри: по середине, слева, справа\r\n\r\n    const left = 0;\r\n    const top = 0;\r\n\r\n    // const container = document.getElementById\r\n    // function onMouseDrag({ movementX, movementY }) {\r\n    //     let getContainerStyle = window.getComputedStyle(container);\r\n    //     let leftValue = parseInt(getContainerStyle.left);\r\n    //     let topValue = parseInt(getContainerStyle.top);\r\n    //     container.style.left = `${leftValue + movementX}px`;\r\n    //     container.style.top = `${topValue + movementY}px`;\r\n    // }\r\n// TODO: реализовать перетягивание элемента. \r\n\r\n    return (\r\n        <div className=\"element-block \" onMouseDown={() => {console.log(\"dadada\")}} onMouseUp={() => {console.log(\"nononon\")}} style={{left: {left}, top: {top}}}>\r\n            <div className=\"drag-point left-up-point\" ></div>\r\n            <div className=\"drag-point right-up-point\" ></div>\r\n            <div className=\"drag-point left-buttom-point\" style={{left: \"0\", bottom: \"0\"}}></div>\r\n            <div className=\"drag-point right-buttom-point\" style={{right: \"0\", bottom: \"0\"}}></div>\r\n\r\n            {/* Вот я не знаю, как рендерить дочерние элементы. Они ведь могут быть разных типов, писать кучу условий? А может солид и ХЕшМАп? */}\r\n\r\n        </div>\r\n\r\n    )\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,MAAM,EAAEC,IAAI,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EAClC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,QAAQ,CAAC;;EAE5C,MAAMS,IAAI,GAAG,CAAC;EACd,MAAMC,GAAG,GAAG,CAAC;;EAEb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACJ;;EAEI,oBACIR,OAAA;IAAKS,SAAS,EAAC,gBAAgB;IAACC,WAAW,EAAEA,CAAA,KAAM;MAACC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IAAA,CAAE;IAACC,SAAS,EAAEA,CAAA,KAAM;MAACF,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IAAA,CAAE;IAACE,KAAK,EAAE;MAACP,IAAI,EAAE;QAACA;MAAI,CAAC;MAAEC,GAAG,EAAE;QAACA;MAAG;IAAC,CAAE;IAAAO,QAAA,gBACrJf,OAAA;MAAKS,SAAS,EAAC;IAA0B;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACjDnB,OAAA;MAAKS,SAAS,EAAC;IAA2B;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAClDnB,OAAA;MAAKS,SAAS,EAAC,8BAA8B;MAACK,KAAK,EAAE;QAACP,IAAI,EAAE,GAAG;QAAEa,MAAM,EAAE;MAAG;IAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACrFnB,OAAA;MAAKS,SAAS,EAAC,+BAA+B;MAACK,KAAK,EAAE;QAACO,KAAK,EAAE,GAAG;QAAED,MAAM,EAAE;MAAG;IAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAItF,CAAC;AAGd;AAACjB,EAAA,CA7BuBD,YAAY;AAAAqB,EAAA,GAAZrB,YAAY;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}